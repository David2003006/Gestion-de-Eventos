// <auto-generated />
using System;
using Gestion_de_Eventos.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gestion_de_Eventos.Migrations
{
    [DbContext(typeof(EventosContext))]
    [Migration("20240402003327_add-Seguidores")]
    partial class addSeguidores
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Gestion_de_Eventos.Data.Models.Comentarios", b =>
                {
                    b.Property<int>("IdComentario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Comentario")
                        .HasColumnType("longtext");

                    b.Property<int?>("IdEvento")
                        .HasColumnType("int");

                    b.Property<int>("IdOrganizador")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.HasKey("IdComentario");

                    b.HasIndex("IdEvento");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Comentarios");
                });

            modelBuilder.Entity("Gestion_de_Eventos.Data.Models.Eventos", b =>
                {
                    b.Property<int>("IdEvento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("BoletosDisponibles")
                        .HasColumnType("int");

                    b.Property<double>("Costo")
                        .HasColumnType("double");

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext");

                    b.Property<string>("Direccion")
                        .HasColumnType("longtext");

                    b.Property<DateOnly?>("Fecha")
                        .HasColumnType("date");

                    b.Property<TimeOnly?>("Hora")
                        .HasColumnType("time(6)");

                    b.Property<int?>("IdOganizador")
                        .HasColumnType("int");

                    b.Property<int>("IdOrganizador")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.HasKey("IdEvento");

                    b.HasIndex("IdOganizador");

                    b.ToTable("Eventos");
                });

            modelBuilder.Entity("Gestion_de_Eventos.Data.Models.IngresarComprarBoletos", b =>
                {
                    b.Property<int>("IdCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CantidadBoletos")
                        .HasColumnType("int");

                    b.Property<int>("IdEvento")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("MetodoDePago")
                        .HasColumnType("longtext");

                    b.HasKey("IdCompra");

                    b.HasIndex("IdEvento");

                    b.HasIndex("IdUsuario");

                    b.ToTable("IngresarComprarBoletos");
                });

            modelBuilder.Entity("Gestion_de_Eventos.Data.Models.Organizadores", b =>
                {
                    b.Property<int>("IdOganizador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Apellido")
                        .HasColumnType("longtext");

                    b.Property<string>("Correo")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.Property<string>("NombreEmpresa")
                        .HasColumnType("longtext");

                    b.HasKey("IdOganizador");

                    b.ToTable("Organizadores");
                });

            modelBuilder.Entity("Gestion_de_Eventos.Data.Models.Seguidores", b =>
                {
                    b.Property<int>("IdSeguidor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("IdOrganizador")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<int?>("OrganizadorIdOganizador")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioIdUsuario")
                        .HasColumnType("int");

                    b.HasKey("IdSeguidor");

                    b.HasIndex("OrganizadorIdOganizador");

                    b.HasIndex("UsuarioIdUsuario");

                    b.ToTable("Seguidores");
                });

            modelBuilder.Entity("Gestion_de_Eventos.Data.Models.Usuarios", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Apellido")
                        .HasColumnType("longtext");

                    b.Property<string>("Correo")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("MetodoDePago")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.Property<string>("NombreDeUsuario")
                        .HasColumnType("longtext");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Gestion_de_Eventos.Data.Models.Comentarios", b =>
                {
                    b.HasOne("Gestion_de_Eventos.Data.Models.Eventos", "Evento")
                        .WithMany()
                        .HasForeignKey("IdEvento");

                    b.HasOne("Gestion_de_Eventos.Data.Models.Usuarios", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evento");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Gestion_de_Eventos.Data.Models.Eventos", b =>
                {
                    b.HasOne("Gestion_de_Eventos.Data.Models.Eventos", "Evento")
                        .WithMany("ListaEventos")
                        .HasForeignKey("IdOganizador");

                    b.Navigation("Evento");
                });

            modelBuilder.Entity("Gestion_de_Eventos.Data.Models.IngresarComprarBoletos", b =>
                {
                    b.HasOne("Gestion_de_Eventos.Data.Models.Eventos", "Evento")
                        .WithMany()
                        .HasForeignKey("IdEvento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gestion_de_Eventos.Data.Models.Usuarios", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evento");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Gestion_de_Eventos.Data.Models.Seguidores", b =>
                {
                    b.HasOne("Gestion_de_Eventos.Data.Models.Organizadores", "Organizador")
                        .WithMany()
                        .HasForeignKey("OrganizadorIdOganizador");

                    b.HasOne("Gestion_de_Eventos.Data.Models.Usuarios", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioIdUsuario");

                    b.Navigation("Organizador");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Gestion_de_Eventos.Data.Models.Eventos", b =>
                {
                    b.Navigation("ListaEventos");
                });
#pragma warning restore 612, 618
        }
    }
}
